---------------------------------------------
1.官网地址：(从官网获取资源)
  1.logback:http://logback.qos.ch/manual/configuration.html
  2.Spring: http://docs.spring.io/spring/docs/
  3.mybatis:http://mybatis.github.io/mybatis-3/zh/index.jsp
----------------
2.mvn命令创建web骨架项目：
  mvn archetype:create-DgroupId=org.seckill -DartifactId=seckill -DatchetypeArtifactId=maven-archetype-webapp
----------------
3.idea创建maven项目：
    --1.使用提供好的示例：maven-archetype-webapp
    --2.修改web.xml版本为servlet3.1
        --servlet2.3中jsp的默认el表达式是不工作的,所以需要引入更高版本：
          G:\apache-tomcat-8.0.22\webapps\examples\WEB-INF\web.xml
          复制，修改servlet版本为3.1
    --3.补全缺失目录：
        project structure --mould--新建java、test:java/resource,并确定其功能
    --4.添加pom依赖：spring、log、web等
---------------
4.秒杀系统业务流程分析：
    商家-----添加/调整-----库存-----秒杀/预售-----用户
    商家-----发货/核账-----库存-----付款/退货-----用户
    --核心：库存的处理
        --用户秒杀----减库存+记录购买明细----完整事务----数据落地
        --购买行为：成功时间、有效期。付款发货信息
---------------
5.数据落地：
    --mysql:关系型数据库：事务机制仍是目前最可靠的落地方案。
    --nosql：非关系型数据库，例如redis等存储方案（追求高可用、性能、分布式），对事物的支持较差、
---------------
6.mysql实现秒杀难点分析：
    --竞争：n个用户同时秒杀一个活动
    --mysql：事务+行级锁
    --事务：
        --1.start transaction
        --2.update 库存数量  -------竞争关系在此处产生
        --3.insert 购买明细
        --4.commit
    --行级锁：
        update table set num=num-1 where id=10 and num>1
        --第十件商品同时被N个人秒杀，其余等待----如何高效处理竞争/即减库存的操作？？？？？？？？？？？？？？？
 --------------
 7.具体实现：秒杀功能
    --秒杀借口暴露：禁止浏览器插件自动请求
    --执行秒杀
    --秒杀相关查询
 -------------
 8，代码开发阶段
    --DAo设计编码：包含表设计
    --service设计
    --web设计
 -------------
 9.具体设计：

