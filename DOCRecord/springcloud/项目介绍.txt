
___________________________________________________
第一篇: 服务的注册与发现（Eureka）:
服务注册中心:eureka【juˈri:kə】spring-01(spring-server) localhost:8761 服务路径：http://${eureka.instance.hostname}:${server.port}/eureka/

服务提供者集群：
	·服务提供者1 -- spring-client-01  localhost:8762	服务注册名：spring-client-01

	·服务提供者2 -- spring-client-02  localhost:8763	服务注册名：spring-client-01

___________________________________________________
第二篇: 服务消费者（rest+ribbon）
第三篇: 服务消费者（Feign）
服务消费者负载均衡转发：
	·服务消费者（rest+ribbon 【ˈrɪbən】）--spring-ribbon-01    localhost:8764 
	·服务消费者（Feign 【fen】）      --spring-feign-01     localhost:8765
	---以上两种方式：消费者消费时，会交替访问8762,8763
		--当8762,8763其中一台关闭时
			·rest+ribbon：会访问到断路器
			·Feign：只会访问未关闭的那台
		--当8762,8763都关闭时，两个消费者均返回断路器内容
___________________________________________________
第四篇:断路器（Hystrix）
断路器设置：(hystrix)英 【hɪst'rɪks】 
·rest+ribbon：
   0.启动类添加注解@EnableHystrix
   1.添加pom依赖：spring-cloud-starter-hystrix
   2.添加注解方法 @HystrixCommand(fallbackMethod = "hiError")和hiError方法

·Feign：自带
   1.yml中添加参数为feign.hystrix.enabled=true
   2.添加service实现类并制定断路器内容

Hystrix Dashboard (断路器：Hystrix 仪表盘)改造：
·rest+ribbon：
   0.启动类添加注解@EnableHystrixDashboard
   1.pom.xml引入spring-cloud-starter-hystrix-dashboard
   2.在主程序启动类中加入@EnableHystrixDashboard注解，开启hystrixDashboard
   -----------------------------------
	1.访问http://localhost:8764/hystrix
	2.输入http://localhost:8764/hystrix.stream  和 haha
	3.点击monitor stream
	4.访问：http://localhost:8764/hi?name=forezp此时会出现监控界面：

·Feign：
___________________________________________________
第五篇: 路由网关(zuul):【】
	1.路由转发指定消费者：
	2.pom.xml
	3.在其入口applicaton类加上注解@EnableZuulProxy，开启zuul的功能：
	4.加上配置文件application.yml加上以下的配置代码：
	5.访问http://localhost:8769/api-a/hi?name=forezp  http://localhost:8769/api-b/hi?name=forezp
路由的服务过滤：
	1.新建过滤器类
	2.这时访问：http://localhost:8769/api-a/hi?name=forezp ；网页显示：token is empty
	3.访问 http://localhost:8769/api-a/hi?name=forezp&token=22 ；网页显示 hi forezp,i am from port:8762
___________________________________________________
第六篇: 分布式配置中心(Spring Cloud Config)






















