——————————————————————————
监听器：
	-统计用户在线人数时:监听session，创建+1，销毁-1,定义全局变量就能获得
	-web监听器：由servlet规范提供的，可监听客户端请求，服务端操作
监听对象：监听各个域对象的创建，销毁和其属性的变化
	jsp的九大内置对象
	-ServletContext -application
		-上下文对象，有容器创建和初始化，范围整个web应用，有且只有一个，在关闭服务时销毁
	-HttpSession	-session
		-会话，保存上下文的机制，针对每一个会话的，放在服务端，通过sessionId区分，浏览器或服务器结束时销毁
	-ServletRequest	-request
		-客户请求时创建，访问结束后销毁
WEB监听器：
	-Servlet规范中定义的一种特殊类
	-监听各个域对象的创建，销毁和其属性的变化
	-用于监听与对象的属性发生修改的事件
	-可在事件发生前和后做些必要处理
主要用途：
	-1.统计在线人数和在线用户
	-2.系统启动时加载初始化信息
	-3.统计网站访问量
	-4.跟Spring结合
————————————————————————————
监听绑定到HttpSession域中的某个对象的状态事件监听器
    -HttpSessionBindingListener      绑定-解除绑定
    -HttpSessionActivationListener   钝化-活化
    ————————————————————————
    以上不需要再web.xml文件中注册
    属于实体类的监听绑定
session钝化机制：
    1.正常-session放在服务器内存中
    2.当session内存开销过大时-会影响web服务器性能
      session钝化机制可以解决这个问题：
        ·服务器不经常使用的session对象，暂时序列化到数据库或文件系统中
        ·当被使用时反序列化到内存中，整个过程有服务器自动完成
tomcat中两种session钝化管理器：
    1.StandardManager:
        ·tomcat被关闭或重启时，会将当前内存中session对象钝化到服务器文件系统中
        ·web程序被重新加载时，...
        ·钝化后文件保存路径：tomcat安装路径-/work/Catalina/hostname/applicationname/SESSION.ser
    2.PersistentManager:
        ·钝化扩展：包含StandardManager的两种情况
        ·可配置主流内存的session对象数目，将不常使用的session对象保存到文件系统中，使用时重新加载
        ·默认情况下：tomcat提供两个钝化驱动类：
            ·org.apache.Catalina.FileStore
            ·org.apache.Catalina.JDBCStore
tomcat钝化管理器配置位置：
    tomcat/conf/context.xml
    ：
    <Manager pathname="">
————————————————————————————
servlet3.0监听器用法：
    ·@WebListener(desc)：desc为描述信息。此注解写的类必须实现以下至少一个接口：
        ServletContextListener
        ServletContextAttributeListener
        ServletRequestListener
        ServletRequestAttributeListener
        HttpSessionListener
        HttpSessionAttributeListener
————————————————————————————
监听器的两种注册方式：
    -1.web.xml
    -2.注解 @WebListener(desc)














